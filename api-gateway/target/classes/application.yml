server:
  port: 7000
spring:
  application:
    name: api-gateway
  zipkin:
    base-url: http://127.0.0.1:9411
    discovery-client-enabled: false #让nacos把它当成一个url不要做服务名
    sender:
      type: web
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848  #注册到nacoos
    gateway:
      discovery:
        locator:
          enabled: true  #让gateway可以发现nacos中的微服务
      routes:  #路由数组可以放多个路由。满足什么条件转发到哪个微服务上
        - id: product_route #当前路由标识，默认uuid
          #uri: http://localhost:8081 #要转发的地址
          uri: lb://service-product #lb负载均衡 后面是具体微服务的标识
          order: 1 #路由越小优先级越高
          predicates:  #断言（条件判断，返回值是bool，满足条件的）可以自定义路由配置详情看AGEROUTER
            - Path=/product-serv/**  #当请求的规则满足
            #- Age=18,60  #限制18到60的人
          filters: #过滤器 自定义过滤器Log
            - StripPrefix=1 #在请求转发路径去掉一层
          #  - SetStatus=250 #设置状态码
        - id: order_route #当前路由标识，默认uuid
          #uri: http://localhost:8081 #要转发的地址
          uri: lb://service-order #lb负载均衡 后面是具体微服务的标识
          order: 1 #路由越小优先级越高
          predicates: #断言（条件判断，返回值是bool，满足条件的）可以自定义路由配置详情看AGEROUTER
            - Path=/order-serv/**  #当请求的规则满足
            #- Age=18,60  #限制18到60的人
          filters: #过滤器 自定义过滤器Log
            - StripPrefix=1 #在请求转发路径去掉一层
            #  - SetStatus=250 #设置状态码
            # - Log=ture,false
            # - Log=ture,false

